name: Build Release

on:
  release:
    types:
      - published

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-release:
    name: Build and push tag images
    strategy: 
      matrix:
        architecture: [amd64,ppc64le,arm64,s390x]
        platform: [linux]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set Env Tags
      run: echo RELEASE_TAG=$(echo $GITHUB_REF | cut -d '/' -f 3) >> $GITHUB_ENV

    - name: Get Date
      id: date
      run: date > now && cat now

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Build Image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: ${{ env.RELEASE_TAG }}-${{ matrix.platform }}-${{ matrix.architecture }}
        archs: ${{ matrix.architecture }}
        build-args: |
          release_tag=${{env.RELEASE_TAG }}
          ARCH=${{ matrix.architecture }}
        dockerfiles: |
          ./Dockerfile

    - name: Push Image
      id: push-image
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ env.IMAGE_NAME }}
        tags: ${{ env.RELEASE_TAG }}-${{ matrix.platform }}-${{ matrix.architecture }}
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-image.outputs.registry-paths }}"

    outputs:
      registry: ${{ env.REGISTRY }}
      imageName: ${{ env.IMAGE_NAME }}
      imageVersion: ${{ env.RELEASE_TAG }}

  build-multiarch:
    needs: build-release
    uses: ./.github/workflows/build-multiarch.yml
    with:
      name: ${{ needs.build-release.outputs.imageName }}
      tag: ${{ needs.build-release.outputs.imageVersion }}
      sign: false
    secrets:
      registry: ${{ needs.build-release.outputs.registry }}
      user: ${{ github.actor }}
      password: ${{ secrets.GITHUB_TOKEN }}

  # extract-assets:
  #   needs: build-release
  #   uses: ./.github/workflows/release-artifacts.yml
  #   with:
  #     name: ${{ needs.build-release.outputs.imageName }}
  #     tag: ${{ needs.build-release.outputs.imageVersion }}
  #   secrets:
  #     registry: ${{ env.REGISTRY }}
  #     user: ${{ github.actor }}
  #     password: ${{ secrets.GITHUB_TOKEN }}
  #     token: ${{ secrets.GITHUB_TOKEN }}